apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  labels:
    name: mongo
spec:
  ports:
  - port: 27017
    targetPort: 27017
  clusterIP: None     # headless service via None ClusterIP : No load balancer, But DNS
  selector:
    app: mongodb      # To be looked up by DNS, the selector should be matched with the pod's.
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  serviceName: mongodb-service
  selector:
    matchLabels:
      app: mongodb
  replicas: 3
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongo
        image: mongo:5.0.7
        args:
        - '--bind_ip'
        - '0.0.0.0'
        - '--replSet'
        - 'anyflow-replset'
        - '--auth'
        - '--clusterAuthMode'
        - 'keyFile'
        - '--keyFile'
        - '/hostroot/mongo/keyfile'
        - "--setParameter"
        - "authenticationMechanisms=SCRAM-SHA-1"
        resources:
          limits:
            memory: '128Mi'
            cpu: '500m'
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: hostroot
          mountPath: /hostroot
        - name: mongo-persistent-volume-claim
          mountPath: /data/db
      volumes:
      - name: hostroot
        hostPath:
          path: /hostroot
  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-volume-claim
    spec:
      storageClassName: standard # standard는 kind에 기본적으로 딸려오는 provisioner로 local-path-provisioner를 사용
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi