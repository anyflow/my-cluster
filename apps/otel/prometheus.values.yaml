mode: statefulset # daemonset doesn't add k8s service by default
autoscaling:
  enabled: true
ports:
  prometheus: # prometheus exporter
    enabled: true
    containerPort: 9090
    servicePort: 9090
    hostPort: 9090
    protocol: TCP

clusterRole:
  create: true
  rules:
    - apiGroups: [""]
      resources:
        - pods
        - endpoints
        - services
        - nodes
        # - nodes/metrics
      verbs:
        - get
        - list
        - watch

config:
  service:
    telemetry:
      logs:
        level: DEBUG
    pipelines:
      metrics:
        receivers:
          - prometheus
        exporters:
          - debug
          - prometheus

  exporters:
    debug: {}
    prometheus: # for pulling metrics by prometheus
      endpoint: 0.0.0.0:9090
    # prometheusremotewrite: # for pushing metrics to prometheus
    #   endpoint: "http://prometheus-server.cluster:80/api/v1/write"

  receivers:
    prometheus:
      config:
        scrape_configs:
          - job_name: opentelemetry-collector
            scrape_interval: 10s
            static_configs:
              - targets:
                  - ${env:MY_POD_IP}:8888

          # - job_name: "istiod"
          #   kubernetes_sd_configs:
          #     - role: endpoints
          #       namespaces:
          #         names:
          #           - istio-system
          #   relabel_configs:
          #     - source_labels:
          #         [
          #           __meta_kubernetes_service_name,
          #           __meta_kubernetes_endpoint_port_name,
          #         ]
          #       action: keep
          #       regex: istiod;http-monitoring

          # - job_name: "envoy-stats"
          #   metrics_path: /stats/prometheus
          #   kubernetes_sd_configs:
          #     - role: pod

          #   relabel_configs:
          #     - source_labels: [__meta_kubernetes_pod_container_port_name]
          #       action: keep
          #       regex: ".*-envoy-prom"

          # Scrape config for service endpoints.
          #
          # The relabeling allows the actual service scrape endpoint to be configured
          # via the following annotations:
          #
          # * `prometheus.io/scrape`: Only scrape services that have a value of
          # `true`, except if `prometheus.io/scrape-slow` is set to `true` as well.
          # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
          # to set this to `https` & most likely set the `tls_config` of the scrape config.
          # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
          # * `prometheus.io/port`: If the metrics are exposed on a different port to the
          # service then set this appropriately.
          # * `prometheus.io/param_<parameter>`: If the metrics endpoint uses parameters
          # then you can set any parameter
          - job_name: "kubernetes-service-endpoints"
            honor_labels: true

            kubernetes_sd_configs:
              - role: endpoints

            relabel_configs:
              - source_labels:
                  [__meta_kubernetes_service_annotation_prometheus_io_scrape]
                action: keep
                regex: true
              - source_labels:
                  [
                    __meta_kubernetes_service_annotation_prometheus_io_scrape_slow,
                  ]
                action: drop
                regex: true
              - source_labels:
                  [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                action: replace
                target_label: __scheme__
                regex: (https?)
              - source_labels:
                  [__meta_kubernetes_service_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels:
                  [
                    __address__,
                    __meta_kubernetes_service_annotation_prometheus_io_port,
                  ]
                action: replace
                target_label: __address__
                regex: (.+?)(?::\d+)?;(\d+)
                replacement: $$1:$$2
              - action: labelmap
                regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
                replacement: __param_$$1
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: namespace
              - source_labels: [__meta_kubernetes_service_name]
                action: replace
                target_label: service
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: node

          # Scrape config for slow service endpoints; same as above, but with a larger
          # timeout and a larger interval
          #
          # The relabeling allows the actual service scrape endpoint to be configured
          # via the following annotations:
          #
          # * `prometheus.io/scrape-slow`: Only scrape services that have a value of `true`
          # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
          # to set this to `https` & most likely set the `tls_config` of the scrape config.
          # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
          # * `prometheus.io/port`: If the metrics are exposed on a different port to the
          # service then set this appropriately.
          # * `prometheus.io/param_<parameter>`: If the metrics endpoint uses parameters
          # then you can set any parameter
          - job_name: "kubernetes-service-endpoints-slow"
            honor_labels: true

            scrape_interval: 5m
            scrape_timeout: 30s

            kubernetes_sd_configs:
              - role: endpoints

            relabel_configs:
              - source_labels:
                  [
                    __meta_kubernetes_service_annotation_prometheus_io_scrape_slow,
                  ]
                action: keep
                regex: true
              - source_labels:
                  [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                action: replace
                target_label: __scheme__
                regex: (https?)
              - source_labels:
                  [__meta_kubernetes_service_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels:
                  [
                    __address__,
                    __meta_kubernetes_service_annotation_prometheus_io_port,
                  ]
                action: replace
                target_label: __address__
                regex: (.+?)(?::\d+)?;(\d+)
                replacement: $$1:$$2
              - action: labelmap
                regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
                replacement: __param_$$1
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: namespace
              - source_labels: [__meta_kubernetes_service_name]
                action: replace
                target_label: service
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: node

          # Example scrape config for probing services via the Blackbox Exporter.
          #
          # The relabeling allows the actual service scrape endpoint to be configured
          # via the following annotations:
          #
          # * `prometheus.io/probe`: Only probe services that have a value of `true`
          - job_name: "kubernetes-services"
            honor_labels: true

            metrics_path: /probe
            params:
              module: [http_2xx]

            kubernetes_sd_configs:
              - role: service

            relabel_configs:
              - source_labels:
                  [__meta_kubernetes_service_annotation_prometheus_io_probe]
                action: keep
                regex: true
              - source_labels: [__address__]
                target_label: __param_target
              - target_label: __address__
                replacement: blackbox
              - source_labels: [__param_target]
                target_label: instance
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                target_label: namespace
              - source_labels: [__meta_kubernetes_service_name]
                target_label: service

          # Example scrape config for pods
          #
          # The relabeling allows the actual pod scrape endpoint to be configured via the
          # following annotations:
          #
          # * `prometheus.io/scrape`: Only scrape pods that have a value of `true`,
          # except if `prometheus.io/scrape-slow` is set to `true` as well.
          # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
          # to set this to `https` & most likely set the `tls_config` of the scrape config.
          # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
          # * `prometheus.io/port`: Scrape the pod on the indicated port instead of the default of `9102`.
          - job_name: "kubernetes-pods"
            honor_labels: true

            kubernetes_sd_configs:
              - role: pod

            relabel_configs:
              - source_labels:
                  [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
                action: keep
                regex: true
              - source_labels:
                  [__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow]
                action: drop
                regex: true
              - source_labels:
                  [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
                action: replace
                regex: (https?)
                target_label: __scheme__
              - source_labels:
                  [__meta_kubernetes_pod_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels:
                  [
                    __meta_kubernetes_pod_annotation_prometheus_io_port,
                    __meta_kubernetes_pod_ip,
                  ]
                action: replace
                regex: (\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})
                replacement: "[$$2]:$$1"
                target_label: __address__
              - source_labels:
                  [
                    __meta_kubernetes_pod_annotation_prometheus_io_port,
                    __meta_kubernetes_pod_ip,
                  ]
                action: replace
                regex: (\d+);((([0-9]+?)(\.|$)){4})
                replacement: $$2:$$1
                target_label: __address__
              - action: labelmap
                regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
                replacement: __param_$$1
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: namespace
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: pod
              - source_labels: [__meta_kubernetes_pod_phase]
                regex: Pending|Succeeded|Failed|Completed
                action: drop
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: node

          # Example Scrape config for pods which should be scraped slower. An useful example
          # would be stackriver-exporter which queries an API on every scrape of the pod
          #
          # The relabeling allows the actual pod scrape endpoint to be configured via the
          # following annotations:
          #
          # * `prometheus.io/scrape-slow`: Only scrape pods that have a value of `true`
          # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
          # to set this to `https` & most likely set the `tls_config` of the scrape config.
          # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
          # * `prometheus.io/port`: Scrape the pod on the indicated port instead of the default of `9102`.
          - job_name: "kubernetes-pods-slow"
            honor_labels: true

            scrape_interval: 5m
            scrape_timeout: 30s

            kubernetes_sd_configs:
              - role: pod

            relabel_configs:
              - source_labels:
                  [__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow]
                action: keep
                regex: true
              - source_labels:
                  [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
                action: replace
                regex: (https?)
                target_label: __scheme__
              - source_labels:
                  [__meta_kubernetes_pod_annotation_prometheus_io_path]
                action: replace
                target_label: __metrics_path__
                regex: (.+)
              - source_labels:
                  [
                    __meta_kubernetes_pod_annotation_prometheus_io_port,
                    __meta_kubernetes_pod_ip,
                  ]
                action: replace
                regex: (\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})
                replacement: "[$$2]:$$1"
                target_label: __address__
              - source_labels:
                  [
                    __meta_kubernetes_pod_annotation_prometheus_io_port,
                    __meta_kubernetes_pod_ip,
                  ]
                action: replace
                regex: (\d+);((([0-9]+?)(\.|$)){4})
                replacement: $$2:$$1
                target_label: __address__
              - action: labelmap
                regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
                replacement: __param_$$1
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - source_labels: [__meta_kubernetes_namespace]
                action: replace
                target_label: namespace
              - source_labels: [__meta_kubernetes_pod_name]
                action: replace
                target_label: pod
              - source_labels: [__meta_kubernetes_pod_phase]
                regex: Pending|Succeeded|Failed|Completed
                action: drop
              - source_labels: [__meta_kubernetes_pod_node_name]
                action: replace
                target_label: node
